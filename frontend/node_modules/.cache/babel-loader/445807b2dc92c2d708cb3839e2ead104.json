{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bar27\\\\IntelliChat_File_Assistant\\\\frontend\\\\src\\\\components\\\\TestCommunication.tsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nconst TestCommunication = () => {\n  const [response, setResponse] = useState('');\n  const testBackendConnection = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/test');\n      setResponse(res.data.message);\n    } catch (error) {\n      console.error('Error communicating with backend:', error);\n      setResponse('Failed to connect to backend.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Test Backend Communication\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: testBackendConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Test Connection\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, response));\n};\nexport default TestCommunication;","map":{"version":3,"names":["React","useState","axios","TestCommunication","response","setResponse","testBackendConnection","res","get","data","message","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/bar27/IntelliChat_File_Assistant/frontend/src/components/TestCommunication.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TestCommunication: React.FC = () => {\r\n  const [response, setResponse] = useState<string>('');\r\n\r\n  const testBackendConnection = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/test');\r\n      setResponse(res.data.message);\r\n    } catch (error) {\r\n      console.error('Error communicating with backend:', error);\r\n      setResponse('Failed to connect to backend.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Backend Communication</h2>\r\n      <button onClick={testBackendConnection}>Test Connection</button>\r\n      <p>{response}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestCommunication;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMK,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,4BAA4B,CAAC;MACzDH,WAAW,CAACE,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDN,WAAW,CAAC,+BAA+B,CAAC;IAC9C;EACF,CAAC;EAED,oBACEL,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4BAA8B,CAAC,eACnCnB,KAAA,CAAAa,aAAA;IAAQO,OAAO,EAAEd,qBAAsB;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAuB,CAAC,eAChEnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIf,QAAY,CACb,CAAC;AAEV,CAAC;AAED,eAAeD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}